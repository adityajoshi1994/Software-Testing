package SoftwareTesting;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InOrder;
import org.mockito.Mockito;

import edu.uci.ics.textdb.api.dataflow.ISink;
import edu.uci.ics.textdb.api.engine.Engine;
import edu.uci.ics.textdb.api.engine.Plan;

public class Mockito1 {
	/**
	 * Engine: Is APIEngine
	 * A query plan is a tree of operators except the root, which is an ISink object
	 * that consumes all the tuples generated by its subtree.
	 * An ISink object is used as the root of a query plan tree to consume all the
	 * tuples generated by its subtree.
	 */
	private Engine APIEngine;
    private Plan APIplanner;
    private ISink iSink;
	
	@Before
	public void setUp(){
		APIEngine = Engine.getEngine();
        APIplanner = Mockito.mock(Plan.class);
        iSink = Mockito.mock(ISink.class);

	}
	/**
	 * Tests if APIPlanner calls the get root method
	 * Tests if iSink calls open(), processTuples(), close() in that order
	 * @throws Exception
	 */
	
	@Test
    public void testEvaluate() throws Exception {
        
        Mockito.when(APIplanner.getRoot()).thenReturn(iSink);
        APIEngine.evaluate(APIplanner);
        InOrder order = Mockito.inOrder(iSink);
        Mockito.verify(APIplanner, Mockito.times(1)).getRoot();
        Mockito.verify(iSink,Mockito.times(1)).open();
        Mockito.verify(iSink,Mockito.times(1)).processTuples();
        Mockito.verify(iSink,Mockito.times(1)).close();
       
        order.verify(iSink).open();
        order.verify(iSink).processTuples();
        order.verify(iSink).close();
        
        
    }
	
}
